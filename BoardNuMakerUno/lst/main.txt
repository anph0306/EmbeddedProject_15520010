; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\Template -I..\NUC140BSP\CMSIS\CM0\DeviceSupport\Nuvoton\NUC1xx -I..\NUC140BSP\NuvotonPlatform_Keil\Include -I..\NUC140BSP\NuvotonPlatform_Keil\Include\Driver -I..\NUC140BSP\CMSIS\CM0\CoreSupport -I..\NUC140BSP\NuvotonPlatform_Keil\Include\NUC1xx-LB_002 -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\Inc\ST\STM32F10x -D__UVISION_VERSION=517 --omf_browse=.\obj\main.crf main.c]
                          THUMB

                          AREA ||i.UART_INT_HANDLE||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  UART_INT_HANDLE PROC
;;;28     /*---------------------------------------------------------------------------------------------------------*/
;;;29     void UART_INT_HANDLE(void)
000000  b5f8              PUSH     {r3-r7,lr}
;;;30     {
;;;31     	uint8_t bInChar[1] = {0xFF};
000002  a015              ADR      r0,|L1.88|
;;;32     
;;;33     	while(UART0->ISR.RDA_IF == 1) 
;;;34     	{
;;;35     		DrvUART_Read(UART_PORT0, bInChar, 1);	
;;;36     		if(comRbytes < 128) // check if Buffer is full
000004  4c16              LDR      r4,|L1.96|
000006  6800              LDR      r0,[r0,#0]            ;31
;;;37     		{
;;;38     			comRbuf[comRbytes] = bInChar[0];
000008  4d14              LDR      r5,|L1.92|
;;;39     			comRbytes++;
;;;40     		}
;;;41     		else if ( (comRbuf[comRbytes] == 0) || (comRbytes == 128) )
;;;42     		{
;;;43     			comRbytes = 0;
;;;44     			sprintf(TEXT2+4, "%s", comRbuf);
00000a  1ca6              ADDS     r6,r4,#2
00000c  4f15              LDR      r7,|L1.100|
00000e  9000              STR      r0,[sp,#0]            ;30
000010  e01d              B        |L1.78|
                  |L1.18|
000012  2201              MOVS     r2,#1                 ;35
000014  4669              MOV      r1,sp                 ;35
000016  2000              MOVS     r0,#0                 ;35
000018  f7fffffe          BL       DrvUART_Read
00001c  8820              LDRH     r0,[r4,#0]            ;36  ; comRbytes
00001e  2880              CMP      r0,#0x80              ;36
000020  d207              BCS      |L1.50|
000022  4668              MOV      r0,sp                 ;38
000024  7800              LDRB     r0,[r0,#0]            ;38
000026  8821              LDRH     r1,[r4,#0]            ;38  ; comRbytes
000028  5468              STRB     r0,[r5,r1]            ;38
00002a  8820              LDRH     r0,[r4,#0]            ;39  ; comRbytes
00002c  1c40              ADDS     r0,r0,#1              ;39
00002e  8020              STRH     r0,[r4,#0]            ;39
000030  e00d              B        |L1.78|
                  |L1.50|
000032  8820              LDRH     r0,[r4,#0]            ;41  ; comRbytes
000034  5c28              LDRB     r0,[r5,r0]            ;41
000036  2800              CMP      r0,#0                 ;41
000038  d002              BEQ      |L1.64|
00003a  8820              LDRH     r0,[r4,#0]            ;41  ; comRbytes
00003c  2880              CMP      r0,#0x80              ;41
00003e  d106              BNE      |L1.78|
                  |L1.64|
000040  2000              MOVS     r0,#0                 ;43
000042  8020              STRH     r0,[r4,#0]            ;43
000044  4a05              LDR      r2,|L1.92|
000046  a108              ADR      r1,|L1.104|
000048  1d30              ADDS     r0,r6,#4
00004a  f7fffffe          BL       __2sprintf
                  |L1.78|
00004e  69f8              LDR      r0,[r7,#0x1c]         ;33
000050  07c0              LSLS     r0,r0,#31             ;33
000052  d1de              BNE      |L1.18|
;;;45     		}			
;;;46     	}
;;;47     }
000054  bdf8              POP      {r3-r7,pc}
;;;48     
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
000058  ff00              DCB      255,0
00005a  00                DCB      0
00005b  00                DCB      0
                  |L1.92|
                          DCD      ||.bss||
                  |L1.96|
                          DCD      ||.data||
                  |L1.100|
                          DCD      0x40050000
                  |L1.104|
000068  257300            DCB      "%s",0
00006b  00                DCB      0

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                  main PROC
;;;48     
;;;49     int32_t main()
000000  b0a8              SUB      sp,sp,#0xa0
;;;50     {
;;;51     	uint8_t  i = 0;
000002  2500              MOVS     r5,#0
;;;52     	uint8_t  dataout[128] = { 0 };
000004  2180              MOVS     r1,#0x80
000006  4668              MOV      r0,sp
000008  f7fffffe          BL       __aeabi_memclr4
;;;53     
;;;54     	STR_UART_T sParam;
;;;55     
;;;56     	UNLOCKREG();
00000c  4c2b              LDR      r4,|L2.188|
00000e  2059              MOVS     r0,#0x59
000010  6020              STR      r0,[r4,#0]
000012  2016              MOVS     r0,#0x16
000014  6020              STR      r0,[r4,#0]
000016  2088              MOVS     r0,#0x88
000018  6020              STR      r0,[r4,#0]
;;;57       DrvSYS_Open(48000000);
00001a  4829              LDR      r0,|L2.192|
00001c  f7fffffe          BL       DrvSYS_Open
;;;58     	LOCKREG();
000020  2600              MOVS     r6,#0
000022  6026              STR      r6,[r4,#0]
;;;59     
;;;60        	
;;;61     	/* Set UART Pin */
;;;62     	DrvGPIO_InitFunction(E_FUNC_UART0);		
000024  2029              MOVS     r0,#0x29
000026  f7fffffe          BL       DrvGPIO_InitFunction
;;;63     
;;;64     	/* UART Setting */
;;;65         sParam.u32BaudRate 		= 115200;
00002a  20e1              MOVS     r0,#0xe1
00002c  0240              LSLS     r0,r0,#9
;;;66         sParam.u8cDataBits 		= DRVUART_DATABITS_8;
00002e  9020              STR      r0,[sp,#0x80]
000030  2003              MOVS     r0,#3
000032  a920              ADD      r1,sp,#0x80
000034  7108              STRB     r0,[r1,#4]
;;;67         sParam.u8cStopBits 		= DRVUART_STOPBITS_1;
000036  714e              STRB     r6,[r1,#5]
;;;68         sParam.u8cParity 		= DRVUART_PARITY_NONE;
000038  718e              STRB     r6,[r1,#6]
;;;69         sParam.u8cRxTriggerLevel= DRVUART_FIFO_1BYTES;
00003a  71ce              STRB     r6,[r1,#7]
;;;70     
;;;71     	/* Set UART Configuration */
;;;72      	if(DrvUART_Open(UART_PORT0,&sParam) != E_SUCCESS);  
00003c  2000              MOVS     r0,#0
00003e  f7fffffe          BL       DrvUART_Open
;;;73     
;;;74     	DrvUART_EnableInt(UART_PORT0, DRVUART_RDAINT, (PFN_DRVUART_CALLBACK*)UART_INT_HANDLE);  
000042  4a20              LDR      r2,|L2.196|
000044  2101              MOVS     r1,#1
000046  2000              MOVS     r0,#0
000048  f7fffffe          BL       DrvUART_EnableInt
00004c  466f              MOV      r7,sp                 ;52
                  |L2.78|
;;;75     	
;;;76     	
;;;77     	while(1)
;;;78     	{
;;;79     	
;;;80     		int8_t a = Scankey();
00004e  f7fffffe          BL       Scankey
000052  4604              MOV      r4,r0
;;;81     		
;;;82     		if (a != -1)
000054  1c40              ADDS     r0,r0,#1
000056  d015              BEQ      |L2.132|
;;;83     		{
;;;84     			if( a == '0' || a == '1' || a == '2' ||
000058  2c30              CMP      r4,#0x30
00005a  d00f              BEQ      |L2.124|
00005c  2c31              CMP      r4,#0x31
00005e  d00d              BEQ      |L2.124|
000060  2c32              CMP      r4,#0x32
000062  d00b              BEQ      |L2.124|
;;;85     					a == '3' || a == '4' || a == '5' ||
000064  2c33              CMP      r4,#0x33
000066  d009              BEQ      |L2.124|
000068  2c34              CMP      r4,#0x34
00006a  d007              BEQ      |L2.124|
00006c  2c35              CMP      r4,#0x35
00006e  d005              BEQ      |L2.124|
;;;86     					a == '6' || a == '7' || a == '9' ||
000070  2c36              CMP      r4,#0x36
000072  d003              BEQ      |L2.124|
000074  2c37              CMP      r4,#0x37
000076  d001              BEQ      |L2.124|
000078  2c39              CMP      r4,#0x39
00007a  d100              BNE      |L2.126|
                  |L2.124|
;;;87     					a == '9' 														)
;;;88     			{
;;;89     					dataout[i] = a;
00007c  557c              STRB     r4,[r7,r5]
                  |L2.126|
00007e  1c6d              ADDS     r5,r5,#1
;;;90     			}
;;;91     			i++;
000080  b2ed              UXTB     r5,r5
000082  e00a              B        |L2.154|
                  |L2.132|
;;;92     		}
;;;93     		else
;;;94     		{ 
;;;95     			uint8_t error[16] = "Scan error";
000084  4810              LDR      r0,|L2.200|
000086  c80f              LDM      r0,{r0-r3}
;;;96     			sprintf((char*)dataout, "%s", error);
000088  9225              STR      r2,[sp,#0x94]
00008a  9326              STR      r3,[sp,#0x98]
00008c  aa23              ADD      r2,sp,#0x8c
00008e  c203              STM      r2!,{r0,r1}
000090  a10e              ADR      r1,|L2.204|
000092  4668              MOV      r0,sp
000094  3a08              SUBS     r2,r2,#8
000096  f7fffffe          BL       __2sprintf
                  |L2.154|
;;;97     		}
;;;98     		
;;;99     		if (i == 2)
00009a  2d02              CMP      r5,#2
00009c  d109              BNE      |L2.178|
;;;100    		{
;;;101    			if (a == 'A')
00009e  2c41              CMP      r4,#0x41
0000a0  d106              BNE      |L2.176|
;;;102    			{
;;;103    				dataout[i] = 0;
0000a2  4668              MOV      r0,sp
0000a4  7086              STRB     r6,[r0,#2]
;;;104    				DrvUART_Write(UART_PORT0, dataout, 3);
0000a6  2203              MOVS     r2,#3
0000a8  4669              MOV      r1,sp
0000aa  2000              MOVS     r0,#0
0000ac  f7fffffe          BL       DrvUART_Write
                  |L2.176|
;;;105    			}
;;;106    			i = 0;
0000b0  2500              MOVS     r5,#0
                  |L2.178|
;;;107    		}
;;;108    		
;;;109    		DrvSYS_Delay(5000000);
0000b2  4807              LDR      r0,|L2.208|
0000b4  f7fffffe          BL       DrvSYS_Delay
0000b8  e7c9              B        |L2.78|
;;;110    	}
;;;111    	//DrvUART_Close(UART_PORT0);
;;;112    }
;;;113    
                          ENDP

0000ba  0000              DCW      0x0000
                  |L2.188|
                          DCD      0x50000100
                  |L2.192|
                          DCD      0x02dc6c00
                  |L2.196|
                          DCD      UART_INT_HANDLE
                  |L2.200|
                          DCD      ||.constdata||
                  |L2.204|
0000cc  257300            DCB      "%s",0
0000cf  00                DCB      0
                  |L2.208|
                          DCD      0x004c4b40

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  comRbuf
                          %        16

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

000000  5363616e          DCB      0x53,0x63,0x61,0x6e
000004  20657272          DCB      0x20,0x65,0x72,0x72
000008  6f720000          DCB      0x6f,0x72,0x00,0x00
                          DCD      0x00000000

                          AREA ||.data||, DATA, ALIGN=1

                  comRbytes
000000  0000              DCW      0x0000
                  TEXT2
000002  5258              DCB      0x52,0x58
000004  3a202020          DCB      0x3a,0x20,0x20,0x20
000008  20202020          DCB      0x20,0x20,0x20,0x20
00000c  20202020          DCB      0x20,0x20,0x20,0x20
000010  2020              DCB      0x20,0x20

                          AREA ||area_number.8||, DATA, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.data||
                  comRhead
000000  0000              DCW      0x0000

                          AREA ||area_number.9||, DATA, ALIGN=1

                          EXPORTAS ||area_number.9||, ||.data||
                  comRtail
000000  0000              DCW      0x0000

                          AREA ||area_number.10||, DATA, ALIGN=0

                          EXPORTAS ||area_number.10||, ||.data||
                  TEXT1
000000  54583a20          DCB      0x54,0x58,0x3a,0x20
000004  73656e64          DCB      0x73,0x65,0x6e,0x64
000008  696e672e          DCB      0x69,0x6e,0x67,0x2e
00000c  2e2e2020          DCB      0x2e,0x2e,0x20,0x20

                  __ARM_use_no_argv EQU 0
