; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\obj\system_nuc1xx.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\system_nuc1xx.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\Template -I..\NUC140BSP\CMSIS\CM0\DeviceSupport\Nuvoton\NUC1xx -I..\NUC140BSP\NuvotonPlatform_Keil\Include -I..\NUC140BSP\NuvotonPlatform_Keil\Include\Driver -I..\NUC140BSP\CMSIS\CM0\CoreSupport -I..\NUC140BSP\NuvotonPlatform_Keil\Include\NUC1xx-LB_002 -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\Inc\ST\STM32F10x -D__UVISION_VERSION=517 --omf_browse=.\obj\system_nuc1xx.crf ..\NUC140BSP\CMSIS\CM0\DeviceSupport\Nuvoton\NUC1xx\system_NUC1xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;21      *----------------------------------------------------------------------------*/
;;;22     void SystemCoreClockUpdate (void)            /* Get Core Clock Frequency      */
000000  b570              PUSH     {r4-r6,lr}
;;;23     {
;;;24         uint32_t u32CoreFreq, u32ClkSrc, u32Shift;
;;;25      
;;;26         u32ClkSrc = SYSCLK->CLKSEL0.HCLK_S;
000002  4d1b              LDR      r5,|L1.112|
000004  6928              LDR      r0,[r5,#0x10]
000006  0740              LSLS     r0,r0,#29
000008  0f40              LSRS     r0,r0,#29
;;;27         if(u32ClkSrc > sizeof(gau32ClkSrcTbl)/sizeof(gau32ClkSrcTbl[0]))
00000a  2805              CMP      r0,#5
00000c  d901              BLS      |L1.18|
;;;28             u32ClkSrc = sizeof(gau32ClkSrcTbl)/sizeof(gau32ClkSrcTbl[0]) - 1; 
00000e  2004              MOVS     r0,#4
000010  e001              B        |L1.22|
                  |L1.18|
;;;29         
;;;30         if(u32ClkSrc != 2)
000012  2802              CMP      r0,#2
000014  d003              BEQ      |L1.30|
                  |L1.22|
;;;31         {
;;;32             /* Use the clock sources directly */
;;;33             u32CoreFreq = gau32ClkSrcTbl[u32ClkSrc];
000016  4917              LDR      r1,|L1.116|
000018  0080              LSLS     r0,r0,#2
00001a  5808              LDR      r0,[r1,r0]
00001c  e017              B        |L1.78|
                  |L1.30|
;;;34         }
;;;35         else
;;;36         {
;;;37             /* Use PLL */
;;;38             u32Shift = SYSCLK->PLLCON.OUT_DV;   /* OUT_DV :DEF: {1, 2, 2, 4} */
00001e  6a28              LDR      r0,[r5,#0x20]
000020  0400              LSLS     r0,r0,#16
000022  0f84              LSRS     r4,r0,#30
;;;39             if(u32Shift > 1) u32Shift--;
000024  2c01              CMP      r4,#1
000026  d900              BLS      |L1.42|
000028  1e64              SUBS     r4,r4,#1
                  |L1.42|
;;;40             u32CoreFreq = ((SYSCLK->PLLCON.PLL_SRC)?__IRC22M:__XTAL) * (SYSCLK->PLLCON.FB_DV+2) / (SYSCLK->PLLCON.IN_DV+2) >> u32Shift;
00002a  6a28              LDR      r0,[r5,#0x20]
00002c  0300              LSLS     r0,r0,#12
00002e  d501              BPL      |L1.52|
000030  4811              LDR      r0,|L1.120|
000032  e000              B        |L1.54|
                  |L1.52|
000034  4811              LDR      r0,|L1.124|
                  |L1.54|
000036  6a29              LDR      r1,[r5,#0x20]
000038  05c9              LSLS     r1,r1,#23
00003a  0dc9              LSRS     r1,r1,#23
00003c  1c89              ADDS     r1,r1,#2
00003e  4348              MULS     r0,r1,r0
000040  6a29              LDR      r1,[r5,#0x20]
000042  0489              LSLS     r1,r1,#18
000044  0ec9              LSRS     r1,r1,#27
000046  1c89              ADDS     r1,r1,#2
000048  f7fffffe          BL       __aeabi_uidivmod
00004c  40e0              LSRS     r0,r0,r4
                  |L1.78|
;;;41         }
;;;42      
;;;43         SystemCoreClock = (u32CoreFreq/(SYSCLK->CLKDIV.HCLK_N + 1));
00004e  69a9              LDR      r1,[r5,#0x18]
000050  0709              LSLS     r1,r1,#28
000052  0f09              LSRS     r1,r1,#28
000054  1c49              ADDS     r1,r1,#1
000056  f7fffffe          BL       __aeabi_uidivmod
00005a  4c06              LDR      r4,|L1.116|
;;;44         CyclesPerUs = (SystemCoreClock + 500000) / 1000000;
00005c  4908              LDR      r1,|L1.128|
00005e  3c08              SUBS     r4,r4,#8              ;43
000060  104a              ASRS     r2,r1,#1
000062  6020              STR      r0,[r4,#0]  ; SystemCoreClock
000064  1880              ADDS     r0,r0,r2
000066  f7fffffe          BL       __aeabi_uidivmod
00006a  6060              STR      r0,[r4,#4]  ; CyclesPerUs
;;;45     }
00006c  bd70              POP      {r4-r6,pc}
;;;46     
                          ENDP

00006e  0000              DCW      0x0000
                  |L1.112|
                          DCD      0x50000200
                  |L1.116|
                          DCD      ||.data||+0x8
                  |L1.120|
                          DCD      0x01518000
                  |L1.124|
                          DCD      0x00b71b00
                  |L1.128|
                          DCD      0x000f4240

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=1

                  SystemInit PROC
;;;59     /*---------------------------------------------------------------------------------------------------------*/
;;;60     void SystemInit (void)
000000  4770              BX       lr
;;;61     {
;;;62     
;;;63     }
;;;64     
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x01518000
                  CyclesPerUs
                          DCD      0x00000016
                  gau32ClkSrcTbl
                          DCD      0x00b71b00
                          DCD      0x00008000
                          DCD      0x01518000
                          DCD      0x00002710
                          DCD      0x01518000
